import org.springframework.stereotype.Service;
import java.io.FileInputStream;
import java.security.KeyStore;
import java.security.cert.Certificate;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;

@Service
public class TrustStoreService {

    public List<String> getTrustStoreDetails() {
        List<String> trustStoreDetails = new ArrayList<>();
        try {
            String trustStorePath = System.getProperty("javax.net.ssl.trustStore");
            String trustStorePassword = System.getProperty("javax.net.ssl.trustStorePassword");

            if (trustStorePath == null || trustStorePassword == null) {
                trustStoreDetails.add("TrustStore properties are not set.");
                return trustStoreDetails;
            }

            trustStoreDetails.add("TrustStore Path: " + trustStorePath);

            KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
            try (FileInputStream fis = new FileInputStream(trustStorePath)) {
                trustStore.load(fis, trustStorePassword.toCharArray());
            }

            Enumeration<String> aliases = trustStore.aliases();
            while (aliases.hasMoreElements()) {
                String alias = aliases.nextElement();
                Certificate certificate = trustStore.getCertificate(alias);
                trustStoreDetails.add("Alias: " + alias);
                trustStoreDetails.add("Certificate: " + certificate.toString());
            }
        } catch (Exception e) {
            trustStoreDetails.add("Error: " + e.getMessage());
            e.printStackTrace();
        }
        return trustStoreDetails;
    }
}


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
public class TrustStoreController {

    @Autowired
    private TrustStoreService trustStoreService;

    @GetMapping("/truststore-details")
    public List<String> getTrustStoreDetails() {
        return trustStoreService.getTrustStoreDetails();
    }
}


# Use an OpenJDK image
FROM openjdk:17-jdk-slim

# Set environment variables for the trust store
ENV JAVA_OPTS="-Djavax.net.ssl.trustStore=/app/config/truststore.jks \
               -Djavax.net.ssl.trustStorePassword=yourpassword"

# Add application jar
COPY target/your-application.jar /app/application.jar

# Add trust store file
COPY config/truststore.jks /app/config/truststore.jks

# Expose the application port
EXPOSE 8080

# Run the application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar /app/application.jar"]


<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Project Metadata -->
    <groupId>com.example</groupId>
    <artifactId>spring-boot-application</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>Spring Boot Application</name>
    <description>A sample Spring Boot application</description>
    <url>http://example.com</url>

    <!-- Parent POM for Spring Boot -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.0</version>
        <relativePath /> <!-- Lookup parent from repository -->
    </parent>

    <!-- Java Version -->
    <properties>
        <java.version>17</java.version>
    </properties>

    <!-- Dependencies -->
    <dependencies>
        <!-- Spring Boot Starter Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Boot Starter Test (for testing purposes) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Add more dependencies as needed -->
    </dependencies>

    <!-- Build Plugins -->
    <build>
        <plugins>
            <!-- Spring Boot Maven Plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!-- Repository for Dependencies (optional if using custom repositories) -->
    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
    </repositories>

</project>
