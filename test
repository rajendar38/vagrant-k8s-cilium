package com.example.apiclient;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;
import reactor.core.publisher.Mono;

@RestController
public class TrustStoreClientController {

    @Autowired
    private TrustStoreServiceClient trustStoreServiceClient;

    @GetMapping("/fetch-truststore")
    public Mono<String> fetchTrustStoreDetails() {
        return trustStoreServiceClient.getTrustStoreDetails();
    }
}


package com.example.apiclient;

import org.springframework.stereotype.Service;
import org.springframework.web.reactive.function.client.WebClient;
import reactor.core.publisher.Mono;

@Service
public class TrustStoreServiceClient {

    private final WebClient webClient;

    public TrustStoreServiceClient(WebClient.Builder webClientBuilder) {
        this.webClient = webClientBuilder.baseUrl("http://truststore-service:8080").build();
    }

    public Mono<String> getTrustStoreDetails() {
        return webClient.get()
                .uri("/truststore")
                .retrieve()
                .bodyToMono(String.class);
    }
}


# Use OpenJDK base image
FROM openjdk:17-jdk-slim

# Add application JAR
COPY target/api-client-0.0.1-SNAPSHOT.jar /app/api-client.jar

# Expose the port
EXPOSE 8081

# Run the application
ENTRYPOINT ["java", "-jar", "/app/api-client.jar"]


version: '3.8'

services:
  truststore-service:
    image: truststore-service:latest
    build:
      context: ./truststore-service
    ports:
      - "8080:8080"

  api-client-service:
    image: api-client-service:latest
    build:
      context: ./api-client-service
    ports:
      - "8081:8081"
    depends_on:
      - truststore-service


<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>api-client</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>API Client</name>
    <description>API Client Service</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <dependencies>
        <!-- Spring Boot Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- WebClient -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <!-- Spring Boot Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Spring Boot Maven Plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>

api-client/
├── src/
│   ├── main/
│   │   ├── java/
│   │   │   └── com/example/apiclient/
│   │   │       ├── TrustStoreClientController.java
│   │   │       ├── TrustStoreServiceClient.java
│   │   ├── resources/
│   │       └── application.properties
├── pom.xml


package com.example.apiclient;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class MainApplication {

    public static void main(String[] args) {
        SpringApplication.run(MainApplication.class, args);
    }
}
<build>
    <plugins>
        <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
                <mainClass>com.example.apiclient.MainApplication</mainClass>
            </configuration>
        </plugin>
    </plugins>
</build>

